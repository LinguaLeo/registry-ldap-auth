worker_processes  1;

events {
    worker_connections  1024;
}

http {

    upstream docker-registry {
        server registry:5000;
    }

    ## Set a variable to help us decide if we need to add the
    ## 'Docker-Distribution-Api-Version' header.
    ## The registry always sets this header.
    ## In the case of nginx performing auth, the header will be unset
    ## since nginx is auth-ing before proxying.
    map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
        'registry/2.0' '';
        default registry/2.0;
    }

    ldap_server ldapserver {
        include ldap.conf;
    }

    server {

        listen 443 ssl;
        server_name docker-registry-proxy;

        # SSL
        ssl on;
        ssl_certificate /etc/ssl/docker/docker-registry.crt;
        ssl_certificate_key /etc/ssl/docker/docker-registry.key;

        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
        chunked_transfer_encoding on;

        # For possible locations have a look at https://docs.docker.com/registry/spec/api/#detail

        location /v2/_catalog {
            include docker-client.conf;
            include docker-registry.conf;
        }

        location ~* /v2/(?<namespace>([^/]*))/ {

            include docker-client.conf;

            auth_ldap "Forbidden";
            auth_ldap_servers ldapserver; 

            include docker-registry.conf;

        }  

        location /v2/ {
            include docker-client.conf;
            auth_ldap "Forbidden";
            auth_ldap_servers ldapserver;
            include docker-registry.conf;
        }

    }

}
